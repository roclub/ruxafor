name: Release - Create with changelog

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  release_create_with_changelog:
    name: Release pushed tag
    runs-on: ubuntu-22.04
    steps:
    - name: Install GitHub CLI
      run: sudo apt-get update -y  && sudo apt-get install gh -y

    - name: Create Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
      run: |

        gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${tag#v}" \
            --generate-notes

        gh release view ${tag} --repo="${GITHUB_REPOSITORY}" --json body --jq .body > notes.txt

        sed -i -e '/^</ d' \
          -e '/./ s/$/\\n\\n/; /^$/d' \
          -e 's/## What'\''s Changed/# Changes/g' \
          -e 's/### Breaking Changes/## Breaking Changes/g' \
          -e 's/### Exiciting New Features/## Exiciting New Features/g' \
          -e 's/### Bug Fixes Implemented/## Bug Fixes Implemented/g' \
          -e 's/### Code Refactoring/## Code Refactoring/g' \
          -e 's/### Repository Housekeeping/## Repository Housekeeping/g' \
          -e 's/### Other Changes/## Other Changes/g' \
          -e '/^\*\*Full Changelog\*\*/d' notes.txt

        echo 'RELEASE_NOTES<<EOF' >> $GITHUB_OUTPUT
        cat notes.txt >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

  check-language:
    runs-on: ubuntu-latest
    outputs:
      is_go: ${{ steps.check.outputs.is_go }}
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get update -y  && sudo apt-get install gh -y

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check language
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: check-language
        run: |
          if [ "$(gh repo view --json primaryLanguage --jq '.primaryLanguage.name')" = "Go" ]; then
            echo "is_go=true" >> $GITHUB_OUTPUT
          else
            echo "is_go=false" >> $GITHUB_OUTPUT
          fi


  create_sbom_go:
    name: Create SBOM for Go-Repositories
    needs: check-language
    if: needs.check-language.outputs.is_go == 'true'

    permissions:
     actions: read
     contents: write

    runs-on: ubuntu-22.04
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - uses: anchore/sbom-action@v0
      with:
        file: ./go.mod
        artifact-name: ${{ github.event.repository.name }}-sbom.spdx

    - uses: anchore/sbom-action/publish-sbom@v0
      with:
        sbom-artifact-match: ".*\\.spdx$"
